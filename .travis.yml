language: c++

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - llvm-toolchain-precise-3.6
    - llvm-toolchain-precise-3.7
    - llvm-toolchain-precise-3.8
    packages:
    - g++-5
    - gcc-5
    - g++-6
    - gcc-6
    - clang-3.6
    - clang-3.7
    - clang-3.8

env:
  # Workaround for https://github.com/travis-ci/travis-ci/issues/4681
  matrix:
    - TRAVIS_EMPTY_JOB_WORKAROUND=true
  
matrix:
  exclude:
    - env: TRAVIS_EMPTY_JOB_WORKAROUND=true
  include:
    # LINUX
    # GCC 5
    - os: linux
      env: COMPILER=g++-5 COMPUTE_COVERAGE=false
      compiler: gcc

    # GCC 6
    - os: linux
      env: COMPILER=g++-6 COMPUTE_COVERAGE=true GCOV=gcov-6 MAKE_DOC=true
      compiler: gcc
      
    # Clang 3.6
    - os: linux
      env: COMPILER=clang++-3.6 CCOMPILER=clang-3.6 COMPUTE_COVERAGE=false
      compiler: clang
      
    # Clang 3.7
    - os: linux
      env: COMPILER=clang++-3.7 CCOMPILER=clang-3.7 COMPUTE_COVERAGE=false
      compiler: clang
      
    # Clang 3.8
    - os: linux
      env: COMPILER=clang++-3.8 CCOMPILER=clang-3.8 COMPUTE_COVERAGE=false
      compiler: clang
      
    # OSX
    # Xcode 6.4
    - os: osx
      env: COMPUTE_COVERAGE=false
      osx_image: xcode6.4
      
    # Xcode 7.3
    - os: osx
      env: COMPUTE_COVERAGE=false
      osx_image: xcode7.3
      
    # Xcode 8
    - os: osx
      env: COMPUTE_COVERAGE=false
      osx_image: xcode8
     
install:
  ############################################################################
  # All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  
  ############################################################################
  # Get Eigen library
  ############################################################################
  - hg clone https://bitbucket.org/eigen/eigen/ eigen
  - sudo cp -r eigen/Eigen /usr/local/include
  
  ############################################################################
  # Override compiler if needed
  ############################################################################
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; export CC=${CCOMPILER}; fi
  
    ############################################################################
  # Install a recent CMake (unless already installed on OS X)
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.5/cmake-3.5.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      if ! brew ls --version cmake &>/dev/null; then brew install cmake; fi
    fi
    
  ############################################################################
  # Install lcov
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "${COMPUTE_COVERAGE}" == "true" ]]; then
      travis_retry wget --no-check-certificate --quiet http://mirrors.us.kernel.org/ubuntu//pool/universe/l/lcov/lcov_1.12-3_all.deb
      sudo dpkg -i lcov_1.12-3_all.deb
      sudo apt-add-repository ppa:brightbox/ruby-ng -y
      sudo apt-get update -qq
      sudo apt-get install ruby2.2 -qq
      sudo gem install coveralls-lcov
    fi

  ############################################################################
  # Install gtest
  ############################################################################
  - |
    git clone https://github.com/google/googletest.git
    cd googletest && mkdir build && cd build && cmake -DCMAKE_CXX_FLAGS="${CXXFLAGS}" -DCMAKE_SHARED_LINKER_FLAGS="${LDFLAGS}" .. && make
    sudo cp -r ../googletest/include/gtest /usr/local/include/
    sudo cp googlemock/gtest/lib*.a /usr/local/lib

  ############################################################################
  # Install doxygen and graphviz if documentation is generated
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "${MAKE_DOC}" == "true" ]]; then
      sudo apt-get install doxygen graphviz
    fi

script:
  - cd $TRAVIS_BUILD_DIR
  - mkdir build && cd build && cmake .. && make -DTest=ON && ctest
after_success:
  ############################################################################
  # Upload coverage information to coveralls.io
  ############################################################################
  - |
    if [[ "${COMPUTE_COVERAGE}" == "true" ]]; then
      lcov --gcov-tool ${GCOV} --capture --no-external --directory . --base-directory ../fung -rc lcov_branch_coverage=1 --output-file coverage.info
      coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info
    fi

  ############################################################################
  # Upload documentation to repository
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "${MAKE_DOC}" == "true" ]]; then
      cd $TRAVIS_BUILD_DIR/build
      make doc
      ../deploy_doc.sh
    fi

